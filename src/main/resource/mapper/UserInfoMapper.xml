<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jh.dao.local.UserInfoDao" >
  <resultMap id="BaseResultMap" type="jh.model.UserInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="login_id" property="loginId" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="bank" property="bank" jdbcType="VARCHAR" />
    <result column="deposit" property="deposit" jdbcType="VARCHAR" />
    <result column="card_no" property="cardNo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="merchant_no" property="merchantNo" jdbcType="VARCHAR" />
    <result column="outlet_no" property="outletNo" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, login_id, `password`, bank, deposit, card_no, `status`, merchant_no, 
    outlet_no, user_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="jh.model.UserInfo" >
    insert into user_info (id, user_name, login_id, 
      `password`, bank, deposit, 
      card_no, `status`, merchant_no, 
      outlet_no, user_type)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{loginId,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{bank,jdbcType=VARCHAR}, #{deposit,jdbcType=VARCHAR}, 
      #{cardNo,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{merchantNo,jdbcType=VARCHAR}, 
      #{outletNo,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="jh.model.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="password != null" >
        `password`,
      </if>
      <if test="bank != null" >
        bank,
      </if>
      <if test="deposit != null" >
        deposit,
      </if>
      <if test="cardNo != null" >
        card_no,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="merchantNo != null" >
        merchant_no,
      </if>
      <if test="outletNo != null" >
        outlet_no,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginId != null" >
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="bank != null" >
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="deposit != null" >
        #{deposit,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="merchantNo != null" >
        #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="outletNo != null" >
        #{outletNo,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="jh.model.UserInfo" >
    update user_info
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginId != null" >
        login_id = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="bank != null" >
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="deposit != null" >
        deposit = #{deposit,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="merchantNo != null" >
        merchant_no = #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="outletNo != null" >
        outlet_no = #{outletNo,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="jh.model.UserInfo" >
    update user_info
    set user_name = #{userName,jdbcType=VARCHAR},
      login_id = #{loginId,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      deposit = #{deposit,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      merchant_no = #{merchantNo,jdbcType=VARCHAR},
      outlet_no = #{outletNo,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="checkLogin" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_info
    where login_id = #{loginId,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>

  <select id="selectByMerchantNo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_info
    where merchant_no =  #{merchantNo,jdbcType=VARCHAR}
  </select>
</mapper>
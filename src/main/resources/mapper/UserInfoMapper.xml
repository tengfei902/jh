<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jh.dao.local.UserInfoDao" >
  <resultMap id="BaseResultMap" type="jh.model.po.UserInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="login_id" property="loginId" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="group_id" property="groupId" jdbcType="BIGINT" />
    <result column="id_card" property="idCard" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, login_id, `password`, `name`, tel, qq,address, `type`,
    `status`, create_time,group_id,id_card
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="jh.model.po.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="password != null" >
        `password`,
      </if>
      <if test="name != null" >
        `name`,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="idCard != null" >
        id_card,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="loginId != null" >
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="update" parameterType="jh.model.po.UserInfo" >
    update user_info
    set
      `name` = #{name,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      birthdate = #{birthdate,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      status = 1
    where id = #{id,jdbcType=BIGINT} and status = 0 and type = 0
  </update>

  <select id="selectByLoginId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where login_id = #{loginId,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>

  <select id="select" resultMap="BaseResultMap" parameterType="jh.model.dto.UserInfoRequest" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where 1=1
    <if test="status != null" >
      and status = #{status,jdbcType=INTEGER}
    </if>
    <if test="user != null" >
      and (user_no like concat(concat('%',#{user,jdbcType=VARCHAR}),'%') or name like concat(concat('%',#{user,jdbcType=VARCHAR}),'%'))
    </if>
    <if test="agent != null" >
      and (sub_user_no like concat(concat('%',#{agent,jdbcType=VARCHAR}),'%') or sub_user_name like concat(concat('%',#{agent,jdbcType=VARCHAR}),'%'))
    </if>
    <if test="type != null" >
      and type = #{type,jdbcType=INTEGER}
    </if>
    <if test="groupId != null" >
      and group_id = #{groupId,jdbcType=BIGINT}
    </if>
    order by id desc
  </select>

  <update id="resetPassword" parameterType="jh.model.po.UserInfo" >
    update user_info
    set
      password = #{newpassword,jdbcType=VARCHAR}
    where id = #{userId,jdbcType=BIGINT}
    and password = #{ypassword,jdbcType=VARCHAR}
    and #{newpassword,jdbcType=VARCHAR} = #{newpasswordok,jdbcType=VARCHAR}
  </update>

  <select id="selectByGroupId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where group_id = #{groupId,jdbcType=VARCHAR} and status != 99 order by id
  </select>

  <update id="updateStatusById">
    update user_info
    set
    status = #{targetStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT} and status = #{fromStatus,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="jh.model.po.UserInfo" >
    update user_info
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        `id_card` = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        `address` = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jh.dao.local.PayReverseOrderDao" >
  <resultMap id="BaseResultMap" type="jh.model.PayReverseOrder" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="ext_id" property="extId" jdbcType="BIGINT" />
    <result column="merchant_no" property="merchantNo" jdbcType="VARCHAR" />
    <result column="no" property="no" jdbcType="VARCHAR" />
    <result column="out_trade_no" property="outTradeNo" jdbcType="VARCHAR" />
    <result column="nonce_str" property="nonceStr" jdbcType="VARCHAR" />
    <result column="sign_type" property="signType" jdbcType="VARCHAR" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, ext_id, merchant_no, `no`, out_trade_no, nonce_str, sign_type, sign, `status`, 
    version, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from pay_reverse_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pay_reverse_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="jh.model.PayReverseOrder" >
    insert into pay_reverse_order (id, ext_id, merchant_no, 
      `no`, out_trade_no, nonce_str, 
      sign_type, sign, `status`, 
      version, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{extId,jdbcType=BIGINT}, #{merchantNo,jdbcType=VARCHAR}, 
      #{no,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, #{nonceStr,jdbcType=VARCHAR}, 
      #{signType,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{version,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="jh.model.PayReverseOrder" >
    insert into pay_reverse_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="extId != null" >
        ext_id,
      </if>
      <if test="merchantNo != null" >
        merchant_no,
      </if>
      <if test="no != null" >
        `no`,
      </if>
      <if test="outTradeNo != null" >
        out_trade_no,
      </if>
      <if test="nonceStr != null" >
        nonce_str,
      </if>
      <if test="signType != null" >
        sign_type,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="extId != null" >
        #{extId,jdbcType=BIGINT},
      </if>
      <if test="merchantNo != null" >
        #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="no != null" >
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null" >
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="nonceStr != null" >
        #{nonceStr,jdbcType=VARCHAR},
      </if>
      <if test="signType != null" >
        #{signType,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="jh.model.PayReverseOrder" >
    update pay_reverse_order
    <set >
      <if test="extId != null" >
        ext_id = #{extId,jdbcType=BIGINT},
      </if>
      <if test="merchantNo != null" >
        merchant_no = #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="no != null" >
        `no` = #{no,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null" >
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="nonceStr != null" >
        nonce_str = #{nonceStr,jdbcType=VARCHAR},
      </if>
      <if test="signType != null" >
        sign_type = #{signType,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="jh.model.PayReverseOrder" >
    update pay_reverse_order
    set ext_id = #{extId,jdbcType=BIGINT},
      merchant_no = #{merchantNo,jdbcType=VARCHAR},
      `no` = #{no,jdbcType=VARCHAR},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      nonce_str = #{nonceStr,jdbcType=VARCHAR},
      sign_type = #{signType,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      version = #{version,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByTrdOrder" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from pay_reverse_order
    where out_trade_no = #{outTradeNo,jdbcType=VARCHAR}
    and ext_id = 0
  </select>

  <update id="updateStatus" >
    update pay_reverse_order
    set
    status = #{toStatus,jdbcType=INTEGER},
    ext_id = (case when #{toStatus,jdbcType=INTEGER} = 0 then 0 else id end)
    where id = #{id,jdbcType=BIGINT} and status = #{fromStatus,jdbcType=INTEGER}
  </update>

</mapper>